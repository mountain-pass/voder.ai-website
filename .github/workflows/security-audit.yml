name: Security Audit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}
  schedule:
    - cron: '0 2 * * *' # daily at 02:00 UTC

jobs:
  npm-audit:
    name: Run npm audit, parse results, and generate SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Install Playwright browsers
        # Ensure browsers are available for E2E orchestration in this job
        run: npx playwright install --with-deps

      - name: Build and run E2E tests (preview + Playwright)
        # Run the project build and then the repository run-e2e.sh orchestrator. We
        # ignore failures here so we can still collect artifacts; verification will
        # run in a separate step that does not ignore failures.
        run: |
          set -euo pipefail
          npm run build
          chmod +x scripts/run-e2e.sh || true
          ./scripts/run-e2e.sh || true

      - name: Run npm audit and save JSON
        run: npm audit --json > audit.json || true

      - name: Run audit parser and save summary
        run: |
          set -euo pipefail
          node .github/scripts/parse-audit.js audit.json 2>&1 | tee audit-summary.md
          exit ${PIPESTATUS[0]}

      - name: Generate SBOM (CycloneDX)
        run: |
          set -euo pipefail
          # Attempt to generate an SBOM using CycloneDX CLI. Don't fail the job if SBOM tool isn't available.
          npx @cyclonedx/cyclonedx-bom@latest -o sbom.json || true

      - name: Generate E2E stability summary (best-effort)
        # Run the in-repo generator if present. This is non-fatal: we don't want the security audit to fail
        # if e2e artifacts are missing (the generator will exit non-zero in that case). Run it, but ignore failures.
        run: |
          set -euo pipefail
          if [ -f .github/scripts/generate-e2e-stability-summary.js ]; then
            node .github/scripts/generate-e2e-stability-summary.js || true
          else
            echo "No generate-e2e-stability-summary.js script found; skipping"
          fi

      - name: Verify E2E artifacts (fast verifier)
        if: always()
        run: |
          set -euo pipefail
          if [ -f scripts/check-e2e-artifacts.js ]; then
            node scripts/check-e2e-artifacts.js
          else
            echo "No scripts/check-e2e-artifacts.js found; skipping"
          fi

      - name: Upload audit and SBOM artifacts (including E2E artifacts)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-artifacts
          path: |
            audit.json
            audit-summary.md
            sbom.json
            e2e-stability.json
            e2e-stability.txt
            playwright-results.json
            preview.out
            test-results/**
